import React, { useState, useEffect, useRef } from 'react';
import { Send, Heart, Baby, Settings, Star, Sparkles, MessageCircle, Calendar, BookOpen, Shield, User, ChevronRight } from 'lucide-react';

const FridayAIPregnancyApp = () => {
  // App states
  const [appStage, setAppStage] = useState('welcome'); // 'welcome', 'details', 'chat'
  const [messages, setMessages] = useState([]);
  const [inputMessage, setInputMessage] = useState('');
  const [isTyping, setIsTyping] = useState(false);
  const [pregnancyWeek, setPregnancyWeek] = useState(12);
  const [currentMood, setCurrentMood] = useState('peaceful');
  const [personality, setPersonality] = useState('friendly');
  const [showSettings, setShowSettings] = useState(false);
  const [userName, setUserName] = useState('');
  const [isPregnant, setIsPregnant] = useState(true);
  const messagesEndRef = useRef(null);

  // Personality styles
  const personalityStyles = {
    friendly: {
      name: "Friendly Companion",
      description: "Warm, supportive, and nurturing",
      icon: "💖",
      tone: "gentle and encouraging"
    },
    sassy: {
      name: "Sassy Sister",
      description: "Funny, bold, and keeps it real",
      icon: "💁‍♀️",
      tone: "playful with attitude"
    },
    direct: {
      name: "Direct Guide",
      description: "Fact-focused and straightforward",
      icon: "🎯",
      tone: "clear and concise"
    }
  };

  // Pregnancy data
  const pregnancyData = {
    4: { size: "poppy seed", emoji: "🌱", milestone: "Neural tube forming" },
    8: { size: "raspberry", emoji: "🫐", milestone: "Heart beating & limbs developing" },
    12: { size: "lime", emoji: "🟢", milestone: "All major organs formed" },
    16: { size: "avocado", emoji: "🥑", milestone: "First movements soon" },
    20: { size: "banana", emoji: "🍌", milestone: "Baby can hear your voice" },
    24: { size: "ear of corn", emoji: "🌽", milestone: "Hearing developing rapidly" },
    28: { size: "eggplant", emoji: "🍆", milestone: "Brain developing quickly" },
    32: { size: "jicama", emoji: "🥥", milestone: "Bones hardening" },
    36: { size: "romaine lettuce", emoji: "🥬", milestone: "Almost full-term" },
    40: { size: "watermelon", emoji: "🍉", milestone: "Ready to meet you!" }
  };

  // Helper functions
  const scrollToBottom = () => {
    messagesEndRef.current?.scrollIntoView({ behavior: "smooth" });
  };

  const getWeekInfo = (week) => {
    const closest = Object.keys(pregnancyData).reduce((prev, curr) => 
      Math.abs(curr - week) < Math.abs(prev - week) ? curr : prev
    );
    return pregnancyData[closest];
  };

  // Start the conversation
  const startConversation = () => {
    setAppStage('chat');
    
    let welcomeMessage = "";
    const weekInfo = getWeekInfo(pregnancyWeek);
    
    if (personality === 'friendly') {
      welcomeMessage = `Hello ${userName ? userName : 'beautiful'}! 💕 I'm Friday, your AI pregnancy companion. I'm so honored to join you on this incredible journey! At week ${pregnancyWeek}, your little one is about the size of a ${weekInfo.size} ${weekInfo.emoji} and ${weekInfo.milestone.toLowerCase()}. 

How are you feeling today? I'm here to support you through every moment - the exciting, the challenging, and everything in between. ✨`;
    } else if (personality === 'sassy') {
      welcomeMessage = `Hey mama ${userName ? userName : 'to-be'}! 💁‍♀️ Friday here, your no-nonsense pregnancy sidekick. Let's get real - at week ${pregnancyWeek}, your tiny human is ${weekInfo.size}-sized ${weekInfo.emoji} and ${weekInfo.milestone.toLowerCase()}. 

What's up? Need advice? Venting space? Or just someone who gets it? I'm your girl. Spill the tea! ☕`;
    } else {
      welcomeMessage = `${userName ? userName + ',' : 'Hello,'} I'm Friday. Pregnancy week ${pregnancyWeek} update: Baby is ${weekInfo.size} size ${weekInfo.emoji}. Currently ${weekInfo.milestone.toLowerCase()}.

How can I assist you today? I provide factual information and direct support.`;
    }
    
    const firstMessage = {
      id: 1,
      text: welcomeMessage,
      sender: 'friday',
      timestamp: new Date().toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'}),
      mood: 'welcome'
    };
    
    setMessages([firstMessage]);
  };

  // Generate AI response
  const generateSmartResponse = async (userMessage) => {
    const weekInfo = getWeekInfo(pregnancyWeek);
    setIsTyping(true);
    
    try {
      // In a real app, you would call your API here
      // This is a simulated response based on personality
      let response = "";
      let detectedMood = currentMood;
      const userMsg = userMessage.toLowerCase();
      
      // Friendly personality responses
      if (personality === 'friendly') {
        if (userMsg.includes('scared') || userMsg.includes('worried')) {
          detectedMood = 'anxious';
          response = `Oh sweet ${userName ? userName : 'mama'}, those feelings are completely understandable 💖 At week ${pregnancyWeek}, many moms feel this way. Your ${weekInfo.size}-sized baby ${weekInfo.emoji} is ${weekInfo.milestone.toLowerCase()}, and your concerns show how much you already love them.

Let's talk through what's worrying you. Remember, you're stronger than you know, and I'm here to support you every step of the way. ✨`;
        } else if (userMsg.includes('excited')) {
          detectedMood = 'excited';
          response = `Yay! Your excitement is contagious! 🎉 At week ${pregnancyWeek}, your little ${weekInfo.size} ${weekInfo.emoji} is ${weekInfo.milestone.toLowerCase()}. 

Did you know your baby can already sense your joy? This positive energy is wonderful for their development! What's making you happiest right now? Let's celebrate together! 💕`;
        } else {
          detectedMood = 'peaceful';
          response = `Thank you for sharing that with me ${userName ? userName : 'dear'} 💫 At week ${pregnancyWeek}, your ${weekInfo.size}-sized baby ${weekInfo.emoji} is ${weekInfo.milestone.toLowerCase()}.

Every pregnancy journey is unique, and I'm honored you're letting me be part of yours. What else is on your mind today? I'm here to listen and support you. 🌸`;
        }
      }
      // Sassy personality responses
      else if (personality === 'sassy') {
        if (userMsg.includes('scared') || userMsg.includes('worried')) {
          detectedMood = 'anxious';
          response = `Okay, first - take a deep breath, mama 💁‍♀️ At week ${pregnancyWeek}, your tiny ${weekInfo.size} ${weekInfo.emoji} is ${weekInfo.milestone.toLowerCase()}. 

Worries? Totally normal. But let's get real - you've got this! What's specifically freaking you out? Let's tackle it together with zero sugar-coating. 👊`;
        } else if (userMsg.includes('excited')) {
          detectedMood = 'excited';
          response = `YAS QUEEN! 🎉 Your little ${weekInfo.size} ${weekInfo.emoji} is living their best life in there at week ${pregnancyWeek}! ${weekInfo.milestone.toLowerCase()} - how cool is that?!

Spill - what's got you all excited? First kicks? Nursery plans? Or just that magical pregnancy glow everyone keeps talking about? 😏`;
        } else {
          detectedMood = 'peaceful';
          response = `Mmmhmm, I hear you ${userName ? userName : 'gorgeous'} 💅 At week ${pregnancyWeek}, that ${weekInfo.size}-sized tenant ${weekInfo.emoji} of yours is ${weekInfo.milestone.toLowerCase()}.

So what's really up? Need advice? A virtual shoulder? Or just someone who won't ask if you're "sure it's not twins"? (Eye roll) I'm all yours. 😘`;
        }
      }
      // Direct personality responses
      else {
        if (userMsg.includes('scared') || userMsg.includes('worried')) {
          detectedMood = 'anxious';
          response = `At week ${pregnancyWeek}, anxiety is common. Your baby is ${weekInfo.size} size ${weekInfo.emoji}, ${weekInfo.milestone.toLowerCase()}.

For concerns:
• 85% of pregnancy worries are unfounded
• Only 3-5% of pregnancies have complications
• Your body is designed for this

What specific concerns can I address with factual information?`;
        } else if (userMsg.includes('excited')) {
          detectedMood = 'excited';
          response = `Week ${pregnancyWeek} update: Baby is ${weekInfo.size} size ${weekInfo.emoji}. Currently ${weekInfo.milestone.toLowerCase()}.

Positive aspects this week:
• Baby can hear sounds
• Brain developing rapidly
• Movement may be felt soon

What would you like to know more about?`;
        } else {
          detectedMood = 'peaceful';
          response = `Week ${pregnancyWeek} status: Baby measures ${weekInfo.size} ${weekInfo.emoji}, ${weekInfo.milestone.toLowerCase()}.

How can I assist? I can provide:
• Developmental facts
• Health recommendations
• Symptom explanations`;
        }
      }
      
      setCurrentMood(detectedMood);
      setIsTyping(false);
      
      return {
        text: response,
        mood: detectedMood,
        suggestions: generateSuggestions(detectedMood, pregnancyWeek)
      };
      
    } catch (error) {
      console.error('Error generating response:', error);
      setIsTyping(false);
      return {
        text: "I'm having trouble responding right now. Could you try asking again?",
        mood: 'error',
        suggestions: []
      };
    }
  };

  const generateSuggestions = (mood, week) => {
    const suggestions = [];
    const baseQuestions = [
      `What's happening in week ${week}?`,
      "Common symptoms right now",
      "Healthy habits for this stage"
    ];
    
    if (mood === 'anxious') {
      suggestions.push(
        "How to reduce pregnancy anxiety?",
        "Is this symptom normal?",
        "When to call the doctor"
      );
    } else if (mood === 'excited') {
      suggestions.push(
        "Milestones coming up",
        "Bonding with baby ideas",
        "Pregnancy celebration ideas"
      );
    }
    
    return [...suggestions, ...baseQuestions].slice(0, 3);
  };

  const handleSendMessage = async () => {
    if (!inputMessage.trim()) return;
    
    const userMessage = {
      id: Date.now(),
      text: inputMessage,
      sender: 'user',
      timestamp: new Date().toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})
    };
    
    setMessages(prev => [...prev, userMessage]);
    setInputMessage('');
    
    const aiResponse = await generateSmartResponse(inputMessage);
    
    const fridayMessage = {
      id: Date.now() + 1,
      text: aiResponse.text,
      sender: 'friday',
      timestamp: new Date().toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'}),
      mood: aiResponse.mood,
      suggestions: aiResponse.suggestions
    };
    
    setMessages(prev => [...prev, fridayMessage]);
  };

  const handleSuggestionClick = (suggestion) => {
    setInputMessage(suggestion);
    handleSendMessage();
  };

  const getMoodColor = (mood) => {
    const colors = {
      anxious: 'bg-blue-100 border-blue-300',
      excited: 'bg-pink-100 border-pink-300',
      tired: 'bg-purple-100 border-purple-300',
      peaceful: 'bg-green-100 border-green-300',
      welcome: 'bg-gradient-to-r from-blue-100 to-purple-100 border-blue-200'
    };
    return colors[mood] || 'bg-gray-100 border-gray-300';
  };

  const currentWeekInfo = getWeekInfo(pregnancyWeek);

  // Welcome Screen
  if (appStage === 'welcome') {
    return (
      <div className="max-w-2xl mx-auto bg-white shadow-2xl rounded-3xl overflow-hidden">
        <div className="bg-gradient-to-r from-pink-500 via-purple-500 to-indigo-500 p-8 text-white text-center">
          <div className="flex justify-center mb-4">
            <Baby className="w-12 h-12" />
          </div>
          <h1 className="text-3xl font-bold mb-2">Welcome to Friday AI</h1>
          <p className="text-lg opacity-90">Your personalized pregnancy companion</p>
        </div>
        
        <div className="p-8">
          <h2 className="text-xl font-semibold mb-6 text-center">Let's get to know each other</h2>
          
          <div className="space-y-6">
            <div>
              <label className="block text-sm font-medium mb-2">How would you like me to talk?</label>
              <div className="grid grid-cols-3 gap-4">
                {Object.entries(personalityStyles).map(([key, style]) => (
                  <button
                    key={key}
                    onClick={() => setPersonality(key)}
                    className={`p-4 border rounded-xl transition-all ${personality === key ? 'border-purple-500 bg-purple-50' : 'border-gray-200 hover:border-purple-300'}`}
                  >
                    <div className="text-2xl mb-2">{style.icon}</div>
                    <h3 className="font-medium">{style.name}</h3>
                    <p className="text-xs text-gray-600 mt-1">{style.description}</p>
                  </button>
                ))}
              </div>
            </div>
            
            <div>
              <label className="block text-sm font-medium mb-2">What should I call you?</label>
              <input
                type="text"
                value={userName}
                onChange={(e) => setUserName(e.target.value)}
                placeholder="Your name (optional)"
                className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent"
              />
            </div>
            
            <div>
              <label className="block text-sm font-medium mb-2">Are you currently pregnant?</label>
              <div className="flex space-x-4">
                <button
                  onClick={() => setIsPregnant(true)}
                  className={`flex-1 py-3 px-4 rounded-lg border ${isPregnant ? 'bg-purple-100 border-purple-500' : 'border-gray-300'}`}
                >
                  Yes
                </button>
                <button
                  onClick={() => setIsPregnant(false)}
                  className={`flex-1 py-3 px-4 rounded-lg border ${!isPregnant ? 'bg-purple-100 border-purple-500' : 'border-gray-300'}`}
                >
                  No, planning/trying
                </button>
              </div>
            </div>
            
            {isPregnant && (
              <div>
                <label className="block text-sm font-medium mb-2">Current pregnancy week</label>
                <div className="flex items-center space-x-4">
                  <input
                    type="range"
                    min="4"
                    max="40"
                    value={pregnancyWeek}
                    onChange={(e) => setPregnancyWeek(parseInt(e.target.value))}
                    className="flex-1"
                  />
                  <span className="w-16 text-center font-medium">Week {pregnancyWeek}</span>
                </div>
                <p className="text-xs text-gray-600 mt-2">
                  Baby is {currentWeekInfo.size} size {currentWeekInfo.emoji}
                </p>
              </div>
            )}
            
            <button
              onClick={() => setAppStage('details')}
              className="w-full py-4 bg-gradient-to-r from-pink-500 to-purple-500 text-white rounded-xl hover:from-pink-600 hover:to-purple-600 transition-all flex items-center justify-center"
            >
              Continue <ChevronRight className="ml-2" />
            </button>
          </div>
        </div>
      </div>
    );
  }

  // Details Screen (if not pregnant)
  if (appStage === 'details' && !isPregnant) {
    return (
      <div className="max-w-2xl mx-auto bg-white shadow-2xl rounded-3xl overflow-hidden">
        <div className="bg-gradient-to-r from-pink-500 via-purple-500 to-indigo-500 p-8 text-white text-center">
          <h1 className="text-2xl font-bold">Pre-Pregnancy Support</h1>
          <p className="opacity-90">Getting ready for your journey</p>
        </div>
        
        <div className="p-8">
          <div className="bg-blue-50 border border-blue-200 rounded-xl p-6 mb-6">
            <h2 className="font-medium text-lg mb-2">Hi{userName ? ` ${userName}` : ''}, I'm Friday</h2>
            <p className="text-gray-700">
              {personality === 'friendly' ? (
                "Even though you're not pregnant yet, I'm here to help you prepare for this beautiful journey! Whether you're trying to conceive or just thinking about it, I can provide information and support."
              ) : personality === 'sassy' ? (
                "Not preggo yet? No problem, sister! Whether you're trying or just thinking about it, I've got your back. Let's get you prepped for when that bun goes in the oven!"
              ) : (
                "For those planning pregnancy, I provide factual information about conception, preparation, and what to expect in early pregnancy."
              )}
            </p>
          </div>
          
          <h3 className="font-medium mb-4">What would you like help with?</h3>
          <div className="grid grid-cols-2 gap-4 mb-8">
            <button 
              onClick={() => {
                setPregnancyWeek(4);
                startConversation();
              }}
              className="p-4 border border-gray-200 rounded-lg hover:bg-gray-50 text-left"
            >
              <div className="text-purple-500 mb-2">
                <BookOpen className="w-5 h-5" />
              </div>
              <h4 className="font-medium">Preconception health</h4>
              <p className="text-sm text-gray-600">Getting your body ready</p>
            </button>
            <button 
              onClick={() => {
                setPregnancyWeek(8);
                startConversation();
              }}
              className="p-4 border border-gray-200 rounded-lg hover:bg-gray-50 text-left"
            >
              <div className="text-pink-500 mb-2">
                <Calendar className="w-5 h-5" />
              </div>
              <h4 className="font-medium">Trying to conceive</h4>
              <p className="text-sm text-gray-600">Fertility & ovulation</p>
            </button>
          </div>
          
          <button
            onClick={startConversation}
            className="w-full py-4 bg-gradient-to-r from-pink-500 to-purple-500 text-white rounded-xl hover:from-pink-600 hover:to-purple-600 transition-all"
          >
            Start Conversation
          </button>
        </div>
      </div>
    );
  }

  // Main Chat Interface
  return (
    <div className="max-w-4xl mx-auto bg-white shadow-2xl rounded-3xl overflow-hidden">
      {/* Header */}
      <div className="bg-gradient-to-r from-pink-500 via-purple-500 to-indigo-500 p-6 text-white relative overflow-hidden">
        <div className="absolute inset-0 bg-black opacity-10"></div>
        <div className="relative z-10 flex items-center justify-between">
          <div className="flex items-center space-x-4">
            <div className="relative">
              <Baby className="w-8 h-8" />
              <div className="absolute -top-1 -right-1 w-3 h-3 bg-green-400 rounded-full border-2 border-white"></div>
            </div>
            <div>
              <h1 className="text-xl font-bold flex items-center">
                <Sparkles className="w-5 h-5 mr-2" />
                FridayAI • {personalityStyles[personality].name}
              </h1>
              <p className="opacity-90 text-sm">
                {isPregnant 
                  ? `Week ${pregnancyWeek} • ${currentWeekInfo.size} ${currentWeekInfo.emoji}`
                  : 'Pre-Pregnancy Support'}
                {userName && ` • Hi ${userName}`}
              </p>
            </div>
          </div>
          <button 
            onClick={() => setShowSettings(!showSettings)}
            className="p-2 rounded-full bg-white bg-opacity-20 hover:bg-opacity-30 transition-all"
          >
            <Settings className="w-5 h-5" />
          </button>
        </div>
        
        {showSettings && (
          <div className="absolute top-full left-0 right-0 bg-white text-gray-800 p-4 shadow-lg z-20 rounded-b-lg">
            <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
              {isPregnant && (
                <div>
                  <label className="block text-sm font-medium mb-2">Pregnancy Week</label>
                  <input
                    type="range"
                    min="4"
                    max="40"
                    value={pregnancyWeek}
                    onChange={(e) => setPregnancyWeek(parseInt(e.target.value))}
                    className="w-full"
                  />
                  <span className="text-sm text-gray-600">Week {pregnancyWeek}</span>
                </div>
              )}
              <div>
                <label className="block text-sm font-medium mb-2">AI Personality</label>
                <select
                  value={personality}
                  onChange={(e) => setPersonality(e.target.value)}
                  className="w-full p-2 border rounded-lg"
                >
                  <option value="friendly">Friendly Companion</option>
                  <option value="sassy">Sassy Sister</option>
                  <option value="direct">Direct Guide</option>
                </select>
              </div>
              <div>
                <label className="block text-sm font-medium mb-2">Your Name</label>
                <input
                  type="text"
                  value={userName}
                  onChange={(e) => setUserName(e.target.value)}
                  className="w-full p-2 border rounded-lg"
                  placeholder="Optional"
                />
              </div>
            </div>
          </div>
        )}
      </div>

      {/* Chat Messages */}
      <div className="h-96 overflow-y-auto p-6 bg-gray-50">
        {messages.length === 0 ? (
          <div className="h-full flex flex-col items-center justify-center text-center text-gray-500">
            <MessageCircle className="w-12 h-12 mb-4 opacity-30" />
            <p>Your conversation with Friday will appear here</p>
            <p className="text-sm mt-2">Share how you're feeling or ask a question</p>
          </div>
        ) : (
          messages.map((message) => (
            <div key={message.id} className={`mb-6 ${message.sender === 'user' ? 'text-right' : 'text-left'}`}>
              <div className={`inline-block max-w-xs lg:max-w-md px-4 py-3 rounded-2xl ${
                message.sender === 'user' 
                  ? 'bg-gradient-to-r from-pink-500 to-purple-500 text-white' 
                  : `${getMoodColor(message.mood)} text-gray-800 border-2`
              }`}>
                <p className="whitespace-pre-wrap">{message.text}</p>
                <p className="text-xs mt-2 opacity-70">{message.timestamp}</p>
              </div>
              
              {message.suggestions && (
                <div className="mt-3 flex flex-wrap gap-2 justify-start">
                  {message.suggestions.map((suggestion, index) => (
                    <button
                      key={index}
                      onClick={() => handleSuggestionClick(suggestion)}
                      className="px-3 py-1 text-sm bg-white border border-gray-300 rounded-full hover:bg-gray-50 transition-colors"
                    >
                      {suggestion}
                    </button>
                  ))}
                </div>
              )}
            </div>
          ))
        )}
        
        {isTyping && (
          <div className="text-left mb-6">
            <div className="inline-block bg-gray-200 px-4 py-3 rounded-2xl">
              <div className="flex space-x-1">
                <div className="w-2 h-2 bg-gray-500 rounded-full animate-bounce"></div>
                <div className="w-2 h-2 bg-gray-500 rounded-full animate-bounce" style={{animationDelay: '0.1s'}}></div>
                <div className="w-2 h-2 bg-gray-500 rounded-full animate-bounce" style={{animationDelay: '0.2s'}}></div>
              </div>
            </div>
          </div>
        )}
        
        <div ref={messagesEndRef} />
      </div>

      {/* Input Area */}
      <div className="p-6 bg-white border-t border-gray-200">
        <div className="flex space-x-4">
          <input
            type="text"
            value={inputMessage}
            onChange={(e) => setInputMessage(e.target.value)}
            onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}
            placeholder={isPregnant 
              ? "Share how you're feeling or ask a question..." 
              : "Ask about preconception or fertility..."}
            className="flex-1 px-4 py-3 border border-gray-300 rounded-full focus:outline-none focus:ring-2 focus:ring-pink-500 focus:border-transparent"
          />
          <button
            onClick={handleSendMessage}
            disabled={!inputMessage.trim() || isTyping}
            className="px-6 py-3 bg-gradient-to-r from-pink-500 to-purple-500 text-white rounded-full hover:from-pink-600 hover:to-purple-600 disabled:opacity-50 disabled:cursor-not-allowed transition-all"
          >
            <Send className="w-5 h-5" />
          </button>
        </div>
        
        <div className="mt-4 flex items-center justify-center space-x-6 text-sm text-gray-600">
          <div className="flex items-center space-x-2">
            <Shield className="w-4 h-4 text-green-500" />
            <span>Private & Secure</span>
          </div>
          <div className="flex items-center space-x-2">
            <Heart className="w-4 h-4 text-red-500" />
            <span>Expert-Reviewed</span>
          </div>
          <div className="flex items-center space-x-2">
            <Star className="w-4 h-4 text-yellow-500" />
            <span>AI Companion</span>
          </div>
        </div>
      </div>
    </div>
  );
};

export default FridayAIPregnancyApp;